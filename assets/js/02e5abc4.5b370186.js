"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[4219],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>b});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=n.createContext({}),o=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},s=function(e){var t=o(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),k=o(r),b=l,f=k["".concat(i,".").concat(b)]||k[b]||p[b]||a;return r?n.createElement(f,u(u({ref:t},s),{},{components:r})):n.createElement(f,u({ref:t},s))}));function b(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,u=new Array(a);u[0]=k;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:l,u[1]=c;for(var o=2;o<a;o++)u[o]=r[o];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},4937:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var n=r(7462),l=(r(7294),r(3905));const a={},u=void 0,c={unversionedId:"cli-reference/kubectl-testkube_get",id:"cli-reference/kubectl-testkube_get",title:"kubectl-testkube_get",description:"kubectl-testkube get",source:"@site/docs/5-cli-reference/kubectl-testkube_get.md",sourceDirName:"5-cli-reference",slug:"/cli-reference/kubectl-testkube_get",permalink:"/cli-reference/kubectl-testkube_get",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/5-cli-reference/kubectl-testkube_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"kubectl-testkube_generate_tests-crds",permalink:"/cli-reference/kubectl-testkube_generate_tests-crds"},next:{title:"kubectl-testkube_get_artifact",permalink:"/cli-reference/kubectl-testkube_get_artifact"}},i={},o=[{value:"kubectl-testkube get",id:"kubectl-testkube-get",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],s={toc:o};function p(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"kubectl-testkube-get"},"kubectl-testkube get"),(0,l.kt)("p",null,"Get resources"),(0,l.kt)("h3",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,"Get available resources, get single item or list"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kubectl-testkube get <resourceName> [flags]\n")),(0,l.kt)("h3",{id:"options"},"Options"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      --go-template string   go template to render (default "{{.}}")\n  -h, --help                 help for get\n  -o, --output string        output type can be one of json|yaml|pretty|go-template (default "pretty")\n')),(0,l.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'  -a, --api-uri string     api uri, default value read from config if set (default "http://localhost:8088")\n  -c, --client string      client used for connecting to Testkube API one of proxy|direct (default "proxy")\n      --namespace string   Kubernetes namespace, default value read from config if set (default "testkube")\n      --oauth-enabled      enable oauth\n      --verbose            show additional debug messages\n')),(0,l.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube"},"kubectl-testkube"),"\t - Testkube entrypoint for kubectl plugin"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_artifact"},"kubectl-testkube get artifact"),"\t - List artifacts of the given execution ID"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_execution"},"kubectl-testkube get execution"),"\t - Lists or gets test executions"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_executor"},"kubectl-testkube get executor"),"\t - Gets executor details"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_test"},"kubectl-testkube get test"),"\t - Get all available tests"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_testsource"},"kubectl-testkube get testsource"),"\t - Get test source details"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_testsuite"},"kubectl-testkube get testsuite"),"\t - Get test suite by name"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_testsuiteexecution"},"kubectl-testkube get testsuiteexecution"),"\t - Gets TestSuite Execution details"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/cli-reference/kubectl-testkube_get_webhook"},"kubectl-testkube get webhook"),"\t - Get webhook details")))}p.isMDXComponent=!0}}]);