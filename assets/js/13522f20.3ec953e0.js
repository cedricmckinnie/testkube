"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[6214],{3905:(e,t,n)=>{n.d(t,{Zo:()=>a,kt:()=>f});var r=n(67294);function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,u=function(e,t){if(null==e)return{};var n,r,u={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(u[n]=e[n]);return u}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(u[n]=e[n])}return u}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},a=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,u=e.mdxType,i=e.originalType,l=e.parentName,a=s(e,["components","mdxType","originalType","parentName"]),b=c(n),f=u,d=b["".concat(l,".").concat(f)]||b[f]||p[f]||i;return n?r.createElement(d,o(o({ref:t},a),{},{components:n})):r.createElement(d,o({ref:t},a))}));function f(e,t){var n=arguments,u=t&&t.mdxType;if("string"==typeof e||u){var i=n.length,o=new Array(i);o[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:u,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},89784:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),u=(n(67294),n(3905));const i={},o=void 0,s={unversionedId:"cli-reference/kubectl-testkube_get_testsuiteexecution",id:"cli-reference/kubectl-testkube_get_testsuiteexecution",title:"kubectl-testkube_get_testsuiteexecution",description:"kubectl-testkube get testsuiteexecution",source:"@site/docs/5-cli-reference/kubectl-testkube_get_testsuiteexecution.md",sourceDirName:"5-cli-reference",slug:"/cli-reference/kubectl-testkube_get_testsuiteexecution",permalink:"/testkube/cli-reference/kubectl-testkube_get_testsuiteexecution",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/5-cli-reference/kubectl-testkube_get_testsuiteexecution.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"kubectl-testkube_get_testsuite",permalink:"/testkube/cli-reference/kubectl-testkube_get_testsuite"},next:{title:"kubectl-testkube_get_webhook",permalink:"/testkube/cli-reference/kubectl-testkube_get_webhook"}},l={},c=[{value:"kubectl-testkube get testsuiteexecution",id:"kubectl-testkube-get-testsuiteexecution",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],a={toc:c};function p(e){let{components:t,...n}=e;return(0,u.kt)("wrapper",(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h2",{id:"kubectl-testkube-get-testsuiteexecution"},"kubectl-testkube get testsuiteexecution"),(0,u.kt)("p",null,"Gets TestSuite Execution details"),(0,u.kt)("h3",{id:"synopsis"},"Synopsis"),(0,u.kt)("p",null,"Gets TestSuite Execution details by ID, or list if id is not passed"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"kubectl-testkube get testsuiteexecution [executionID] [flags]\n")),(0,u.kt)("h3",{id:"options"},"Options"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"  -h, --help                help for testsuiteexecution\n  -l, --label strings       label key value pair: --label key1=value1\n      --limit int           max number of records to return (default 1000)\n      --test-suite string   test suite name\n")),(0,u.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},'  -a, --api-uri string       api uri, default value read from config if set (default "http://localhost:8088")\n  -c, --client string        client used for connecting to Testkube API one of proxy|direct (default "proxy")\n      --go-template string   go template to render (default "{{.}}")\n      --namespace string     Kubernetes namespace, default value read from config if set (default "testkube")\n      --oauth-enabled        enable oauth (default true)\n  -o, --output string        output type can be one of json|yaml|pretty|go-template (default "pretty")\n      --verbose              show additional debug messages\n')),(0,u.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},(0,u.kt)("a",{parentName:"li",href:"/testkube/cli-reference/kubectl-testkube_get"},"kubectl-testkube get"),"\t - Get resources")))}p.isMDXComponent=!0}}]);