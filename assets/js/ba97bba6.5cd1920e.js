"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[2019],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=c(r),d=o,f=b["".concat(u,".").concat(d)]||b[d]||l[d]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=b;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},39534:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const i={},a="Does Testkube Replace my CI/CD?",s={unversionedId:"overview/does-testkube-replace-cicd",id:"overview/does-testkube-replace-cicd",title:"Does Testkube Replace my CI/CD?",description:"The beauty of Testkube is that it improves your CI/CD pipeline!",source:"@site/docs/overview/does-testkube-replace-cicd.md",sourceDirName:"overview",slug:"/overview/does-testkube-replace-cicd",permalink:"/overview/does-testkube-replace-cicd",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/overview/does-testkube-replace-cicd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Supported Test Types",permalink:"/overview/supported-tests"},next:{title:"Overview",permalink:"/getting-started/overview"}},u={},c=[],p={toc:c};function l(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"does-testkube-replace-my-cicd"},"Does Testkube Replace my CI/CD?"),(0,o.kt)("p",null,"The beauty of Testkube is that it improves your CI/CD pipeline!"),(0,o.kt)("p",null,"There are different ways to integrate Testkube with your current CI/CD. You can directly use the CLI, or if you use GitHub, you can create GitHub Actions. Read more about the process ",(0,o.kt)("a",{parentName:"p",href:"https://kubeshop.github.io/testkube/integrations/testkube-automation"},"here"),"."),(0,o.kt)("p",null,"If you're familiar with GitOps, ",(0,o.kt)("a",{parentName:"p",href:"https://testkube.kubeshop.io/blog/a-gitops-powered-kubernetes-testing-machine-with-argocd-and-testkube"},"ArgoCD integration guide")," will be useful, and check the ",(0,o.kt)("a",{parentName:"p",href:"https://testkube.io/blog/flux-testkube-gitops-testing-is-here"},"Flux integration guide"),". The diagram of GitOps + Testkube would look like this: "),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(16130).Z,width:"1680",height:"836"})))}l.isMDXComponent=!0},16130:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/gitops-diagram-317fb632af93458f36b079856668b163.png"}}]);